@page "/"

@inject ILivroServices livroServices
@inject IProdutoServices produtoServices

@rendermode InteractiveServer

<div class="container">
    <div class="row">
        <div class="col-12 col-md-5">
            <div class="justify-content-center justify-content-center-md-start mb-3 mb-md-0">
                <div class="input-group input-group-sm">
                    <input type="text" class="form-control" placeholder="Digite seu Produto Procurado" />
                    <button class="btn btn-info">Digite seu Produto Desejado</button>
                </div>
            </div>
        </div>
        <hr class="mt-3" />
        <div class="row">
            @foreach(var item in listaProdutos)
            {
                <div class="col-xl-2 col-lg-3 col-md-4 col-sm-6 d-flex align-items-stretch">
                    <div class="card text-center bg-light">

                    </div>
                    <div class="card-header">
                        <h4>@item.Preco</h4>
                    </div>
                    <div class="card-body">
                        <h5 class="card-title">@item.Titulo</h5>
                        <p class="card-text">@item.Descricao</p>
                    </div>
                    <div class="card-footer">
                        <a class="btn btn-danger" href="Produto/{@item.Id}">Detalhes do Produto.</a>
                    </div>
                </div>
            }
        </div>
    </div>
</div>

@code 
{
    List<ProdutoViewModel>? listaProdutos = new List<ProdutoViewModel>();

    protected override async Task OnInitializedAsync()
    {
        listaProdutos = await produtoServices.GetAll();

        StateHasChanged();
    }
}