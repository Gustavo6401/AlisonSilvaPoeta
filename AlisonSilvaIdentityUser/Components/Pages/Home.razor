@page "/"

@inject ILivroServices livroServices
@inject IProdutoServices produtoServices
@inject IImagemServices imagemServices

@attribute [AllowAnonymous]

<PageTitle>Home</PageTitle>

<div class="container">
    <div class="row">
        <div class="col-12 col-md-5">
            <div class="justify-content-center justify-content-center-md-start mb-3 mb-md-0">
                <div class="input-group input-group-sm">
                    <input type="text" class="form-control" placeholder="Digite seu Produto Procurado" />
                    <button class="btn btn-info">Digite seu Produto Desejado</button>
                </div>
            </div>
        </div>
        <hr class="mt-3" />
        <div class="row">
            @for(int i = 0; i < listaProdutos!.Count; i++)
            {
                <ItemCard Item="listaProdutos.ElementAt(i)" Imagem="listaImagens!.ElementAt(i)" />
            }
        </div>
    </div>
</div>

@code {
    List<ProdutoViewModel>? listaProdutos = new List<ProdutoViewModel>();
    List<ImagemViewModel>? listaImagens = new List<ImagemViewModel>();

    protected override async Task OnInitializedAsync()
    {
        listaProdutos = await produtoServices.GetAll();

        foreach(var item in listaProdutos!)
        {
            listaImagens!.Add(await imagemServices.GetImagemPadrao(item.Id));
        }

        listaImagens = listaImagens!.OrderBy(i => i.ProdutoId)
                        .ToList();

        StateHasChanged();
    }
}